{"version":3,"sources":["game/config.js","vues/Home.js","game/Cell.js","game/Object.js","game/Player.js","game/Game.js","vues/NewLobbyComponent.jsx","vues/JoinLobbyComponent.jsx","game/Board.js","game/index.js","game/client.js","game/multiplayer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["configGame","width","Home","props","state","lobbies","db","initDB","window","indexedDB","request","open","onerror","event","console","log","onupgradeneeded","target","result","createObjectStore","keyPath","createIndex","unique","onsuccess","transaction","oncomplete","this","setState","getLobbies","bind","tab","objectStore","openCursor","cursor","push","value","continue","lobby","clear","history","matchID","credentials","playerID","data","onClick","goGame","className","nameLobby","lobbyList","src","alt","goCreateLobby","goJoinLobby","map","element","lobbyShow","deleteLobby","Component","Cell","cX","cY","x","y","type","player","setVideCell","object","Object_FR","cName","cImage","name","image","etat","sEtat","Weapon","cPower","cSpeed","power","speed","durability","Armor","cArmor","armor","Life","cVie","vie","Other","Player","cPosition","cClassCss","position","life","classCss","numero","weapon","setThreathless","sPosition","sPower","sSpeed","sLife","looseDurability","powerOfPlayer","looselife","fetch","require","schedule","moment","layerMap","layers","forEach","layer","blockTypeCells","sendNotification","titre","tag","message","then","response","getRandomPosition","max","Math","floor","random","getRandomName","length","characters","charactersLength","i","charAt","TicTacToe","minPlayers","maxPlayers","setup","ctx","setupData","G","cells","cell","playOrder","siPositionIncorrect","playerDefaultPosition","PlayersPositions","includes","namePlayer","playerObject","setPlayer","weapons","armors","lifes","others","generateObject","phases","movePlayer","moves","moveorAttackPlayer","id","playerActual","currentPlayer","setPosition","attackPlayer","opponent","playercurrent","powerofPCurrent","looseWeaponDurability","loosePV","passTurn","events","endTurn","getObject","undefined","gainWeapon","gainArmor","gainLife","turn","moveLimit","order","TurnOrder","DEFAULT","onBegin","pass","Date","date24hours","add","toDate","date23hours","date1hours","currentP","proba","tabAlive","probaTable","probaItem","objectPosition","setObjectCell","tabMoveCell","currentPosition","tailleGrid","cellcurrent","tabMoveCellStr","cellInt","parseInt","getMovePossible","movecell","setBlockCell","setEtat","setMoveCell","cellplus1","cellmoins1","cellplus10","cellmoins10","blockCells","JobPass","scheduleJob","Job23Hours","Job1Hours","onEnd","cancel","indexOf","setDeadPlayer","removeEtat","start","endIf","victory","IsVictory","finishGame","winner","ai","NewLobbyComponent","createLobby","e","preventDefault","requestOptions","method","headers","body","JSON","stringify","numPlayers","number","nameGame","json","saveNameHandler","saveNumberHandler","handleNumberChange","createSelect","select","placeholder","onChange","JoinLobbyComponent","storeGame","game","gameData","idGame","playerCredentials","joinLobby","playerName","navigator","onLine","status","error","catch","stringLobby","players","filter","displayError","matches","errorShow","withRouter","TicTacToeBoard","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","charCodeAt","Notification","icon","badge","addEventListener","docu","img","document","createElement","classList","appendChild","permission","serviceWorker","ready","registration","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","subscription","nameJoueur","requestPermission","a","getElementById","style","display","min","innerHTML","matchData","gameover","tbody","j","toString","docSpan","remove","dash_weapon","dashboard_armor","setWeaponInfo","setArmorInfo","p","textContent","divArmor","divHeart","divPower","buttonNotif","Button","variant","getNotification","height","ResponsiveEmbed","aspectRatio","Container","fluid","Row","Col","Table","responsive","passTour","React","GameFilRouge","Client","board","debug","Child","useState","displayGame","setDisplayGame","interval","useEffect","setInterval","fetchGame","params","useParams","useHistory","ClientFilRouge","multiplayer","SocketIO","server","ButtonLeave","jsonRequest","crendentials","delete","fetchLeave","show","play","clearInterval","Multiplayer","gameServer","lobbyServer","gameComponents","App","Menu","path","component","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","origin","contentType","get","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.058317c7.chunk.js","sourcesContent":["let width = 25;\nlet height = 25;\n\nexport const configGame = {\n    width: width,\n    heigth: height,\n    maxCases: width * height,\n    lifeDefault : 5,\n    powerDefault : 1,\n    speedDefault : 2,\n    serverPort : 12538,\n    dbName:\"game_db\",\n    httpORs : 'https',\n    urlServer : 'server.lamft-dev.tk'\n}","import React, { Component } from 'react';\nimport { configGame } from '../game/config';\n\nclass Home extends Component {\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      lobbies: [],\n      db: null\n    }\n\n    this.initDB();\n\n  }\n\n  initDB() {\n    if (window.indexedDB) {\n\n      let db;\n      let request = indexedDB.open(configGame.dbName);\n\n      request.onerror = function(event) {\n        console.log(\"error: \", event);\n      };\n      \n      request.onupgradeneeded = function(event) {\n        db = event.target.result;\n        let objectStore = db.createObjectStore(\"matches\", { keyPath: \"matchID\" });\n        objectStore.createIndex(\"playerID\", \"playerID\", { unique: false });\n      };\n\n      request.onsuccess = function(event) {\n        db = event.target.result;\n        let transaction = db.transaction([\"matches\"], \"readwrite\");\n        transaction.oncomplete = function(event) {\n          console.log(\"All done!\");\n          this.setState({ db: request.result });\n          this.getLobbies();\n        }.bind(this);\n      }.bind(this);\n    }\n  }\n\n  getLobbies() {\n    if (window.indexedDB && this.state.db !== null) {\n      let tab = [];\n        const objectStore = this.state.db.transaction(\"matches\").objectStore(\"matches\");\n        objectStore.openCursor().onsuccess = function(event) {\n          let cursor = event.target.result;\n          if (cursor) {\n            tab.push(cursor.value);\n            cursor.continue();\n          } else {\n            console.log(\"No more entries!\");\n            this.setState({ lobbies: tab });\n          }\n        }.bind(this);\n    }\n  }\n  deleteLobby(lobby) {\n    if (window.indexedDB && this.state.db !== null) {\n      const objectStore = this.state.db.transaction([\"matches\"], \"readwrite\").objectStore(\"matches\");\n      objectStore.clear();\n      this.setState({ lobbies: [] });\n  }\n}\n  goGame(lobby) {\n    this.props.history.push(`/client/${lobby.matchID}/${lobby.credentials}/${lobby.playerID}`, {\n      data: lobby\n    });\n  }\n  goCreateLobby(lobby) {\n    this.props.history.push(`/create-lobby`, {\n      data: lobby\n    });\n  }\n  goJoinLobby(lobby) {\n    this.props.history.push(`/join-lobby`, {\n      data: lobby\n    });\n  }\n\n  lobbyShow(lobby) {\n    return ( <li key = { lobby.matchID } onClick = {\n        () => { this.goGame(lobby) } } className = 'list-group list-group-item-action bg-danger' > { lobby.nameLobby } </li>)\n    }\n    render(lobbyList = this.state.lobbies) {\n      console.log(lobbyList);\n      return ( <div className = 'text-center col-lg-5 mx-auto'>\n        <img width = '300'\n        className = 'mt-3'\n        src = \"img/logo-fil-rouge.png\"\n        alt = '' />\n        <div>\n        <button onClick = {\n          () => { this.goCreateLobby() } } className = 'btn btn-success mt-3' > Créer un lobby </button> </div >\n        <div>\n        <button onClick = {\n          () => { this.goJoinLobby() } } className = 'btn btn-primary mt-3' > Rejoindre un lobby </button> </div > <p className = 'bg-secondary text-left mt-3' > Rejoignez vos lobbys: </p>   <ul className='list-group mt-1'>\n\n        { lobbyList.map((element) => this.lobbyShow(element)) }\n\n        </ul>\n        <div >\n        <button onClick = {\n          () => { this.deleteLobby() } } className = 'btn btn-success mt-3' > Supprimer vos lobbys en cours </button> </div >\n\n        { /* Ici on a une liste de tous les lobbys pour rejoindre un lobby en cliquant dessus*/ } </div>\n      )\n    }\n  }\n  export default Home;","export class Cell {\n\n    x=null;\n    y=null;\n    type='';\n    value='';\n    player='';\n    player=null;\n\n    constructor(cX,cY) {\n        this.x = cX;\n        this.y = cY;\n        this.setVideCell()\n    }\n\n    setVideCell() {\n        this.type = 'vide';\n        this.value = '';\n        this.player = false;\n        this.object = false;\n    }\n    setPlayer(player) {\n        this.type = 'player'\n        this.value = ''\n        this.player = player\n        this.object = false;\n    }\n    setOpponent() {\n        this.type = 'opponent'\n        this.value = ''\n        this.player = false;\n        this.object = false;\n    }\n    setMoveCell() {\n        this.type = 'move';\n        this.value = '';\n        this.player = false;\n        this.object = false;\n    }\n    setBlockCell() {\n        this.type = 'block';\n        this.value = '';\n        this.player = false;\n        this.object = false;\n    }\n    \n    setObjectCell(object) {\n        this.type = 'object';\n        this.value = '';\n        this.player = false;\n        this.object = object;\n    }\n\n\n}","import {configGame} from './config'\n\nclass Object_FR {\n\n\tname=null;\n\timage=null;\n\tetat=null;\n\t\n\tconstructor(cName,cImage) {\n\t\tthis.name = cName;\n\t\tthis.image = cImage;\n\t}\n\t\n\tsetEtat(sEtat) {\n\t\tthis.etat = sEtat;\n\t}\n\tremoveEtat() {\n\t\tthis.etat = null;\n\t}\n\t\n}\n\nexport class Weapon extends Object_FR {\n\t\n\t\n\tpower=null;\n\tspeed=null;\n\tdurability=null;\n\tconstructor(cName, cPower, cSpeed,cImage) {\n\t\tsuper(cName,cImage);\n\t\tthis.durability = 3;\n\t\tthis.power = cPower\n\t\tthis.speed = cSpeed;\n\t}\n\t\n\tlooseDurability() {\n\t\tthis.durability--;\n\t\treturn this.durability;\n\t}\n}\nexport class Armor extends Object_FR{\n\t\n\tarmor = null;\n\tspeed = null;\n\t\n\tconstructor(cName, cArmor, cSpeed,cImage) {\n\t\tsuper(cName,cImage);\n\t\tthis.armor = cArmor;\n\t\tthis.speed = cSpeed;\n\t}\n}\nexport class Life extends Object_FR {\n\t\n\tvie = null;\n\t\n\tconstructor(cName, cVie,cImage) {\n\t\tsuper(cName,cImage);\n\t\tthis.vie = cVie;\n\t}\n}\nexport class Other extends Object_FR {\n\tconstructor(cName,cImage) {\n\t\tsuper(cName,cImage);\n\t}\n}","import {configGame} from './config'\n\nexport class Player {\n    position = null;\n    name = null;\n    life = null;\n    power = null;\n    speed = null;\n    classCss = null;\n    numero = null;\n    etat = null;\n    \n    weapon = null;\n    armor = null;\n\n    constructor(cPosition, cName,cClassCss) {\n        this.position = cPosition;\n        this.name = cName;\n        this.numero = cClassCss;\n        this.life = configGame.lifeDefault;\n        this.power = configGame.powerDefault;\n        this.speed = configGame.speedDefault;\n        this.classCss = `player${cClassCss}`;\n        this.setThreathless();\n    }\n\n    setPosition(sPosition) {\n        this.position = sPosition;\n    }\n    setPower(sPower) {\n        this.power = sPower;\n    }\n    setSpeed(sSpeed) {\n        this.speed = sSpeed;\n    }\n    setLife(sLife) {\n        this.life = sLife;\n    }\n    setEtat(sEtat) {\n        this.etat = sEtat;\n    }\n    setThreathless() {\n        this.etat = 'threathless';\n    }\n\n    setDeadPlayer() {\n        this.position = null;\n        this.power = null;\n        this.etat = 'dead';\n    }\n\n\n    setParameters(object) {\n        this.position = object.position;\n        this.name = object.name;\n        this.numero = object.numero;\n        this.life = object.life;\n        this.power = object.power;\n        this.speed = object.speed;\n        this.classCss = object.classCss;\n        this.etat = object.etat\n    }\n    \n    \n    /* Gain methods */\n    \n    gainWeapon(weapon) {\n        console.log(\"J'ai obtenu un arme\", weapon)\n        this.weapon = weapon;\n    }\n    gainArmor(armor) {\n        console.log(\"J'ai obtenu une armure\", armor)\n        this.armor = armor;\n    }\n    gainLife(life) {\n        console.log(\"J'ai obtenu de la vie\", life)\n        this.life = this.life + life.vie;\n    }\n    \n    looseWeaponDurability() {\n        if (this.weapon.looseDurability() === 0) {\n            this.weapon = null;\n        }\n    }\n    \n    loosePV(powerOfPlayer) {\n        let looselife = 0\n        if (this.armor != null) {\n            \n            this.armor.armor -= powerOfPlayer\n            if (this.armor.armor <= 0) {\n                looselife = this.armor.armor * -1;\n                this.armor = null\n            }\n        }\n        else {\n            looselife = powerOfPlayer;\n        }\n        this.life -= looselife;\n    }\n\n}","import { INVALID_MOVE, TurnOrder } from \"boardgame.io/core\";\nimport { configGame } from \"./config\"\nimport { Cell } from './Cell';\nimport { Weapon, Armor, Life, Other } from './Object';\nimport data from '../assets/js/map.json';\nimport { Player } from './Player'\nconst fetch = require(\"node-fetch\");\nconst schedule = require('node-schedule');\nconst moment = require('moment');\n\n\n\nlet layerMap = {};\ndata.layers.forEach((layer) => {\n    if (layer.name === \"Calque de Tuiles 2\") {\n        layerMap = layer\n    }\n})\nconst blockTypeCells = [0, 1, 71, 72, 711, 854, 782, 781, 853, 860, 1214, 1223, 1224, 1153, 1152, 1074, 1145, 1068].map(x => x + 1325);\n\n\n\n\nfunction getObject(G) {\n    let proba = Math.floor(Math.random() * (100 - 0 + 1)) + 0;\n\n    let tabAlive = []\n    G.PlayersPositions.forEach(player => {\n        if (player.etat !== 'dead') {\n            tabAlive.push(player);\n        }\n    })\n\n\n\n    console.log(proba, 'proba', 100 - 100 / tabAlive.length);\n\n    if (proba >= 100 - 100 / tabAlive.length) {\n        //Création d'un objet\n\n        let probaTable = Math.floor(Math.random() * (3 - 1 + 1)) + 1;\n        let probaItem = Math.floor(Math.random() * (2 - 0 + 1)) + 0;\n        let object = null\n        if (probaTable === 1) {\n            object = G.weapons[probaItem];\n        }\n        if (probaTable === 2) {\n            object = G.armors[probaItem];\n        }\n        if (probaTable === 3) {\n            object = G.lifes[probaItem];\n        }\n        //object = G.armors[0];\n\n        console.log(object, 'object');\n\n        let siPositionIncorrect = true;\n        while (siPositionIncorrect) {\n\n            let objectPosition = getRandomPosition();\n\n            if (!G.PlayersPositions.includes(objectPosition) && !blockTypeCells.includes(layerMap.data[objectPosition])) {\n                siPositionIncorrect = false;\n\n                G.cells[objectPosition].setObjectCell(object);\n            }\n        }\n        console.log(G.cells);\n        console.log('dsdsdsdssds', G)\n\n\n\n    }\n    return G;\n\n}\n\nfunction generateObject(G) {\n    G.weapons = [new Weapon('Epée', 2, 0, 'weapon_knight_sword'), new Weapon('Epée longue', 4, -1, 'weapon_golden_sword'), new Weapon('Dague', 1, 1, 'weapon_knife'), new Weapon('Spectre de Mage', 1, 1, 'weapon_red_magic_staff')];\n    G.armors = [new Armor('Bottes', 0, 1, 'armor_boots'), new Armor('Cotes de mailles', 1, 0, 'armor_chainmail'), new Armor('Armure en Acier', 3, -1, 'armor_steel'), new Armor('Armure en Beskar', 6, 0, '')];\n    G.lifes = [new Life('Un coeur', 1, 'life_1heart'), new Life('Deux Coeurs', 2, 'life_2heart'), new Life('Trois Coeurs', 3, 'life_3heart'), new Life('5 coeurs', 5, 'life_5heart')];\n    G.others = [new Other('Barque', ''), new Other('Bombes', '')];\n    return G;\n}\n\nfunction sendNotification(nameLobby, playerID, titre, tag, message) {\n    fetch(`https://server.lamft-dev.tk/sendpush/${nameLobby}_player${playerID}/${titre}/${tag}/${message}`)\n        .then(function(response) {\n            return response;\n        })\n        .then(function(response) {\n            console.log(response)\n        });\n}\n\nfunction finishGame(G) {\n    fetch(`https://server.lamft-dev.tk/endGame/${G.nameLobby}`)\n        .then(function(response) {\n            return response;\n        })\n        .then(function(response) {\n            console.log(response)\n        });;\n}\n\nfunction IsVictory(G) {\n    let tabAlive = []\n    G.PlayersPositions.forEach(player => {\n        if (player.etat !== 'dead') {\n            tabAlive.push(player);\n        }\n    })\n    if (tabAlive.length === 1) {\n        return { victory: true, player: tabAlive[0] }\n    } else {\n        return { victory: false }\n    }\n}\n\nfunction getRandomPosition() {\n    let max = configGame.width * configGame.heigth\n    return Math.floor(Math.random() * (max - 0)) + 0;\n}\n\nfunction getRandomName(length) {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nfunction getMovePossible(player, G) {\n    const currentPosition = player.position;\n\n\n    let speed = player.speed;\n\n    if (player.armor !== null) {\n        speed = speed + player.armor.speed;\n    }\n    if (player.weapon !== null) {\n        speed = speed + player.weapon.speed;\n    }\n    if (speed < 1) {\n        speed = 1;\n    }\n\n\n\n    const tailleGrid = configGame.width;\n\n    const cellcurrent = G.cells[currentPosition];\n    const tabMoveCellStr = [];\n    const tabMoveCell = [];\n\n    let car1 = 1;\n    let car2 = 2;\n\n    for (let i = 1; i <= speed; i++) {\n\n        tabMoveCellStr.push(`${cellcurrent.x * tailleGrid + cellcurrent.y - i}`)\n        tabMoveCellStr.push(`${cellcurrent.x * tailleGrid + cellcurrent.y + i}`)\n        tabMoveCellStr.push(`${(cellcurrent.x -i) * tailleGrid + cellcurrent.y}`)\n        tabMoveCellStr.push(`${(cellcurrent.x +i) * tailleGrid + cellcurrent.y}`)\n        if (i === 2) {\n            tabMoveCellStr.push(`${(cellcurrent.x- car1) * tailleGrid + cellcurrent.y + car1}`)\n            tabMoveCellStr.push(`${(cellcurrent.x+ car1) * tailleGrid + cellcurrent.y - car1}`)\n            tabMoveCellStr.push(`${(cellcurrent.x+ car1) * tailleGrid + cellcurrent.y + car1}`)\n            tabMoveCellStr.push(`${(cellcurrent.x- car1) * tailleGrid + cellcurrent.y - car1}`)\n        } else if (i === 3) {\n            tabMoveCellStr.push(`${( cellcurrent.x - car1) * tailleGrid + cellcurrent.y + car2}`)\n            tabMoveCellStr.push(`${( cellcurrent.x + car1) * tailleGrid + cellcurrent.y - car2}`)\n            tabMoveCellStr.push(`${( cellcurrent.x + car1) * tailleGrid + cellcurrent.y + car2}`)\n            tabMoveCellStr.push(`${( cellcurrent.x - car1) * tailleGrid + cellcurrent.y - car2}`)\n\n            tabMoveCellStr.push(`${( cellcurrent.x - car2) * tailleGrid + cellcurrent.y + car1}`)\n            tabMoveCellStr.push(`${( cellcurrent.x + car2) * tailleGrid + cellcurrent.y - car1}`)\n            tabMoveCellStr.push(`${( cellcurrent.x + car2) * tailleGrid + cellcurrent.y + car1}`)\n            tabMoveCellStr.push(`${( cellcurrent.x - car2) * tailleGrid + cellcurrent.y - car1}`)\n        }\n    }\n    tabMoveCellStr.forEach(cell => {\n        let cellInt = parseInt(cell);\n        if (cellInt >= 0 && cellInt < configGame.maxCases && !cell.includes('-')) {\n            tabMoveCell.push(cellInt)\n        }\n    })\n\n\n    return tabMoveCell;\n}\n\nfunction blockCells(tabMoveCell, player, G) { //Permet d'enlevez la possibilité de bouger dans des cases qui est bloquer par une case bloquer\n\n    tabMoveCell.forEach((movecell) => {\n        let cell = G.cells[movecell];\n\n        let cellplus1 = G.cells[movecell + 1];\n        let cellmoins1 = G.cells[movecell - 1];\n        let cellplus10 = G.cells[movecell + 10];\n        let cellmoins10 = G.cells[movecell - 10];\n\n        if (cell.type === 'block') {\n            if (cellmoins10 !== undefined && cellmoins10.type === 'move' && player.position === movecell + 10) {\n                G.cells[movecell - 10].setBlockCell();\n            }\n            if (cellplus10 !== undefined && cellplus10.type === 'move' && player.position === movecell - 10) {\n                G.cells[movecell + 10].setBlockCell();\n            }\n            if (cellmoins1 !== undefined && cellmoins1.type === 'move' && player.position === movecell + 1) {\n                G.cells[movecell - 1].setBlockCell();\n            }\n            if (cellplus1 !== undefined && cellplus1.type === 'move' && player.position === movecell - 1) {\n                G.cells[movecell + 1].setBlockCell();\n            }\n        }\n    });\n}\n\nexport const TicTacToe = {\n    name: 'Jeu_Fil_Rouge',\n    minPlayers: 2,\n    maxPlayers: 5,\n    setup: (ctx, setupData) => {\n\n        console.log(setupData, 'setupData', 'setupData');\n        console.log(ctx, 'ctx', 'ctx');\n\n\n        let G = { cells: [] };\n        G.PlayersPositions = [];\n        G.nameLobby = getRandomName(15);\n\n        for (let x = 0; x < configGame.heigth; x++) {\n            for (let y = 0; y < configGame.width; y++) {\n                var cell = new Cell(x, y)\n                G.cells.push(cell)\n            }\n        }\n\n\n        ctx.playOrder.forEach(player => {\n\n            let siPositionIncorrect = true;\n            while (siPositionIncorrect) {\n\n                let playerDefaultPosition = getRandomPosition();\n\n                if (!G.PlayersPositions.includes(playerDefaultPosition) && !blockTypeCells.includes(layerMap.data[playerDefaultPosition])) {\n                    siPositionIncorrect = false;\n\n                    let namePlayer = getRandomName(5);\n\n                    let playerObject = new Player(playerDefaultPosition, namePlayer, player);\n\n                    G.cells[playerDefaultPosition].setPlayer(playerObject);\n                    G.PlayersPositions[player] = playerObject\n                }\n            }\n        });\n\n\n        G = generateObject(G);\n\n\n        return G;\n    },\n\n\n\n    phases: {\n        movePlayer: { //Phase qui permet de bouger de case, ce lance en premier. Permet eventuellement de attaquer mais passe le tour\n            moves: {\n\n                moveorAttackPlayer: (G, ctx, id) => {\n\n                    console.log(id, ctx)\n                    let playerActual = G.PlayersPositions[ctx.currentPlayer];\n                    try {\n                        for (let i = 0; i < G.cells.length; i++) {\n\n                            if (G.cells[i].player === playerActual) {\n                                G.cells[i].setVideCell()\n                            }\n                        }\n                        playerActual.setPosition(id)\n                        G.cells[id].setPlayer(playerActual);\n                        G.PlayersPositions[ctx.currentPlayer] = playerActual;\n\n                        //ctx.events.setPhase('attackPlayer');\n\n                    } catch {\n                        console.log('pas possible')\n                    }\n\n                },\n\n\n                attackPlayer: (G, ctx, id) => {\n                    try {\n                        let opponent = G.cells[id].player;\n                        let playercurrent = G.PlayersPositions[ctx.currentPlayer];\n\n                        let powerofPCurrent = playercurrent.power;\n                        if (playercurrent.weapon != null) {\n                            powerofPCurrent += playercurrent.weapon.power;\n                            playercurrent.looseWeaponDurability();\n                        }\n\n                        console.log(playercurrent);\n                        sendNotification(G.nameLobby, opponent.numero, 'Perte de PV', 'losePV', \"Vous avez perdu un coeur.\");\n                        G.cells[id].player.loosePV(powerofPCurrent);\n                        if (G.cells[id].player.life <= 0) {\n                            sendNotification(G.nameLobby, G.cells[id].player.numero, 'Défaite', 'loser', \"Vous avez perdu cette partie, vous êtes mort.\");\n                        }\n                    } catch {\n                        console.log('pas possible')\n                    }\n                },\n\n                passTurn: (G, ctx, id) => {\n                    ctx.events.endTurn();\n                },\n\n                getObject: (G, ctx, id) => {\n                    try {\n                        let object = G.cells[id].object;\n                        let playercurrent = G.PlayersPositions[ctx.currentPlayer];\n                        console.log('Je recupere', object);\n                        if (object.power !== undefined) {\n                            playercurrent.gainWeapon(object)\n                        } else if (object.armor !== undefined) {\n                            playercurrent.gainArmor(object)\n                        } else if (object.vie !== undefined) {\n                            console.log('Je recupere de la vie', object);\n                            playercurrent.gainLife(object)\n                        }\n\n\n                        for (let i = 0; i < G.cells.length; i++) {\n\n                            if (G.cells[i].player === playercurrent) {\n                                G.cells[i].setVideCell()\n                            }\n                        }\n                        playercurrent.setPosition(id)\n                        G.cells[id].setPlayer(playercurrent);\n                        G.PlayersPositions[ctx.currentPlayer] = playercurrent;\n\n\n                    } catch {\n                        console.log('pas possible')\n                    }\n                },\n            },\n            turn: {\n                moveLimit: 1,\n                order: TurnOrder.DEFAULT,\n                onBegin: (G, ctx) => { // Tout f'abord, vérification si le joueur est mort ou pas. Si non, obtiens les cases possibles pour le déplacement\n\n                    let player = G.PlayersPositions[ctx.currentPlayer]\n                    if (player.etat === 'dead') {\n                        ctx.events.pass();\n                    } else {\n\n\n                        let dateToday = new Date();\n                        let date24hours = moment().add(24, 'h').toDate();\n                        let date23hours = moment().add(23, 'h').toDate();\n                        let date1hours = moment().add(1, 'h').toDate();\n                        let date15seconds = moment().add(15, 's').toDate();\n\n                        const nameLobby = G.nameLobby;\n                        const currentP = ctx.currentPlayer;\n                        const ctx_temp = ctx;\n\n                        G = getObject(G);\n                        sendNotification(G.nameLobby, ctx.currentPlayer, 'Votre tour', 'yourturn', \"C'est le moment de jouer, IKE !!!!!!\");\n\n\n\n                        let tabMoveCell = getMovePossible(player, G);\n\n                        tabMoveCell.forEach((movecell) => {\n                            if (G.cells[movecell] !== undefined && G.cells[movecell].type === 'vide' && !blockTypeCells.includes(layerMap.data[movecell])) {\n                                G.cells[movecell].setMoveCell();\n                            } else if (blockTypeCells.includes(layerMap.data[movecell])) {\n                                G.cells[movecell].setBlockCell();\n                            } else if (G.cells[movecell] !== undefined && G.cells[movecell].type === 'player') {\n                                G.cells[movecell].player.setEtat('threatfull');\n                            } else if (G.cells[movecell] !== undefined && G.cells[movecell].type === 'object') {\n                                G.cells[movecell].object.setEtat('get');\n                            }\n                        });\n\n                        blockCells(tabMoveCell, player, G)\n\n\n\n                        G.JobPass = schedule.scheduleJob(date24hours, function() {\n                            ctx.events.endTurn();\n                            sendNotification(nameLobby, currentP, 'Votre tour est passé', 'timeout', \"Vous avez passé votre tour à cause de votre inactivité\");\n                        });\n                        G.Job23Hours = schedule.scheduleJob(date23hours, function() {\n                            sendNotification(nameLobby, currentP, 'Encore 1 heure !', 'timeout', \"Vous avez encore 1 heures pour jouer !, sinon vous passerez votre tour\");\n                        });\n                        G.Job1Hours = schedule.scheduleJob(date1hours, function() {\n                            sendNotification(nameLobby, currentP, 'Encore 23 heures !', 'timeout', \"Vous avez encore 23 heures pour jouer !, sinon vous passerez votre tour\");\n                        });\n                        /* G.Job15Seconds = schedule.scheduleJob(date15seconds, function() {\n                            sendNotification(nameLobby, currentP, '15 sec', 'timeout', \"pushTest\");\n                            ctx.events.pass();\n                            //console.log(G.cells[1],'G') //Erreur Cannot perform 'get' on a proxy that has been revoked        \n                        }); */\n\n                    }\n\n                },\n                onEnd: (G, ctx) => { // Permet de reintialiser la map et verifie si un joueur est mort.\n                    console.log('Gaaaaaa', G, 'G')\n                    G.JobPass.cancel();\n                    G.Job23Hours.cancel();\n                    G.Job1Hours.cancel();\n                    //G.Job15Seconds.cancel();\n                    G.cells = G.cells.map(cell => {\n                        if (cell.type === 'move' || cell.type === 'block') {\n                            cell.setVideCell()\n                        }\n                        if (cell.type === 'player') {\n                            cell.player.setThreathless();\n                            if (cell.player.life <= 0) {\n                                G.PlayersPositions.forEach((player) => {\n                                    if (cell.player.classCss === player.classCss) {\n                                        cell.setVideCell()\n                                        G.PlayersPositions[G.PlayersPositions.indexOf(player)].setDeadPlayer();\n                                    }\n                                })\n                            }\n                        }\n                        if (cell.type === 'object') {\n                            cell.object.removeEtat();\n                        }\n                        return cell\n                    })\n                },\n            },\n            start: true,\n        },\n\n        attackPlayer: { //Phase qui permet de attaquer une personne => passe le tour\n            turn: {\n                moveLimit: 1,\n                order: TurnOrder.DEFAULT,\n                onBegin: (G, ctx) => {\n                    G.cells.forEach((cell) => {\n                        if (cell.type !== 'player') {\n                            cell.setVideCell();\n                        }\n                    })\n                },\n                onEnd: (G, ctx) => {},\n            },\n            moves: {},\n        }\n\n    },\n\n    turn: {},\n    endIf: (G, ctx) => {\n        let victory = IsVictory(G);\n        if (victory.victory) {\n            //console.log('Le vainqueur est :',victory.player)\n            sendNotification(G.nameLobby, victory.player.numero, 'Victoire !', 'victory', \"Félicitation ! Vous êtes parvenus a vaincre vos adversaires \");\n\n            finishGame(G);\n\n            return { winner: victory.player };\n        }\n    },\n    ai: {\n        /*enumerate: (G, ctx) => {\n            let moves = [];\n            for (let i = 0; i < configGame.maxCases; i++) {\n                if (G.cells[i] === null) {\n                    moves.push({ move: 'clickCell', args: [i] });\n                }\n            }\n            return moves;\n        },*/\n    },\n}","import React, { Component } from 'react';\nimport { configGame } from '../game/config';\nimport { TicTacToe } from '../game/Game';\n\nclass NewLobbyComponent extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      name: '',\n      number: ''\n    }\n  }\n\n  createLobby = (e) =>{\n    e.preventDefault()\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ numPlayers: this.state.number, setupData: {nameGame:this.state.name} })\n    };\n    fetch(`${configGame.httpORs}://${configGame.urlServer}/games/Jeu_Fil_Rouge/create`, requestOptions)\n        .then(response => response.json())\n        .then(data => this.setState({name: data.matchID}));\n  }\n\n  saveNameHandler = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  saveNumberHandler = (event) => {\n    this.setState({ number: event.target.value });\n  }\n  \n  handleNumberChange = (event) => {\n    this.setState({ number: event.target.value });\n  }\n\n  createSelect = () =>{\n    let select = []\n\n    for (let i = TicTacToe.minPlayers; i <= TicTacToe.maxPlayers; i++) {\n      select.push(<option key={i} value={i} >{i}</option>);   \n    }\n    return select;\n  }\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    return (\n      <div className='text-center col-lg-5 mx-auto' >\n        <img width='100%' className='mt-3' src='img/logo-fil-rouge.png' alt= ''/> \n        <h2 className=\"text-center\">Créer un Lobby</h2>\n        <form className=\"form-signup col-10 mx-auto\" >\n          <div className=\"form-group\">\n            <label>Lobby</label>\n            <input type=\"text\" name=\"lobby\" className=\"form-control\" placeholder=\"N° du Lobby\" value={this.state.name} onChange={this.saveNameHandler} />\n          </div>\n          <div className=\"form-group\">\n            <label>Nombre de joueurs</label>\n            <select className=\"form-control\" value={this.state.number} onChange={this.handleNumberChange}>\n                        {\n                            this.createSelect()\n                        }\n                        </select>\n          </div>\n          <button type=\"submit\" className=\"btn btn-success btn-block\" onClick={this.createLobby}>Créer un Lobby</button>\n        </form>\n      </div>\n    );\n  }\n\n}\n\nexport default NewLobbyComponent;","import React, { Component,Fragment } from 'react';\nimport { Route , withRouter} from 'react-router-dom';\nimport { configGame } from '../game/config';\n\nclass JoinLobbyComponent extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      name: '',\n      number: '',\n      playerID: '',\n      credentials: '',\n      error:'',\n      nameLobby:'',\n      lobbies: []\n    }\n  }\n  \n  storeGame = (game) => {\n    if (window.indexedDB) {\n      const gameData = {matchID: game.idGame, playerID: game.playerID, credentials: game.playerCredentials, nameLobby : game.nameLobby};\n  \n      let db;\n      let request = indexedDB.open(configGame.dbName, 1);\n      console.log(request);\n      \n      request.onupgradeneeded = function(event) {\n        db = event.target.result;\n        \n        let objectStore = db.createObjectStore(\"matches\", { keyPath: \"matchID\" });\n  \n  \n        objectStore.createIndex(\"playerID\", \"playerID\", { unique: false });\n  \n        objectStore.transaction.oncomplete = function(event) {\n          // Store values in the newly created objectStore.\n          let gameObjectStore = db.transaction(\"matches\", \"readwrite\").objectStore(\"matches\");\n          gameObjectStore.add(gameData);\n        };\n      };\n  \n      request.onsuccess = function(event) {\n        db = event.target.result;\n        let transaction = db.transaction([\"matches\"], \"readwrite\");\n        transaction.oncomplete = function(event) {\n          console.log(\"All done!\");\n        };\n        var objectStore = transaction.objectStore(\"matches\");\n          var request = objectStore.add(gameData);\n          request.onsuccess = function(event) {\n            // event.target.result === customer.ssn;\n          };\n        console.log(db);\n      };\n      \n      \n    }\n    else {\n      console.log(\"Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.\");\n    }\n    \n\n\n  }\n\n  joinLobby = (e) =>{\n    e.preventDefault()\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ playerID: this.state.playerID, playerName: this.state.name })\n    };\n    console.log(navigator.onLine,\"navigator.onLine\");\n    if (navigator.onLine) {\n      fetch(`${configGame.httpORs}://${configGame.urlServer}/games/Jeu_Fil_Rouge/${this.state.number}/join`, requestOptions)\n          .then(response =>  {\n            if (response.status === 200) {\n              return response.json()\n            }\n            else if (response.status === 404) {\n              return {error : true,name: 'Lobby inexistant !'};\n            }\n            else {\n              return {error : true,name: 'Lobby complet !'};\n            }\n          })\n          .then(data => {\n            \n            if (data.error) {\n              this.setState({error: data})\n            }\n            else {\n              const game = { playerCredentials : data.playerCredentials, idGame:this.state.number,playerID: this.state.playerID, playerName: this.state.name, nameLobby:this.state.nameLobby  }\n              this.storeGame(game)\n              \n              this.props.history.push(`/client/${this.state.number}/${data.playerCredentials}/${this.state.playerID}`, {\n                data: game});\n            }\n          })\n          .catch(function(error) {\n            this.setState({error: {error : true,name: 'Pas de connexion à internet !'}})\n          }.bind(this));\n    }\n    else {\n      this.setState({error: {error : true,name: 'Pas de connexion à internet !'}})\n    }\n  }\n\n  saveNameHandler = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  saveNumberHandler = (event) => {\n    this.setState({ number: event.target.value });\n  }\n\n  lobbyShow(lobby) {\n    \n    let stringLobby = lobby.matchID;\n    if (lobby.setupData.nameGame) {\n      stringLobby = lobby.setupData.nameGame;\n    }\n    \n    return (<li key={lobby.matchID} className='list-group list-group-item-action bg-danger'><button onClick={()=>this.setState({nameLobby:stringLobby,number:lobby.matchID, playerID: lobby.players.filter(player => (player.name == null))[0]?.id })}>{stringLobby}</button></li>)\n  }\n  errorShow(error) {\n    let displayError;\n    if (error.error) {\n      displayError = <p>Erreur pour rejoindre un lobby : {error.name}</p>;\n    }\n    return displayError;\n  }\n\n\n  componentDidMount() {\n    \n    if (navigator.onLine) {\n      fetch (`${configGame.httpORs}://${configGame.urlServer}/games/Jeu_Fil_Rouge`)\n      .then(response => response.json())\n      .then( (data) => {\n        this.setState({lobbies : data.matches});\n        console.log(this.state.lobbies[0]?.players.filter(player => (player.name == null)));\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className='text-center col-lg-5 mx-auto' >\n        <img width='100%' className='mt-3' src='img/logo-fil-rouge.png' alt= ''/> \n        <h2 className=\"text-center\">Rejoindre un lobby :</h2>\n        <form className=\"form-signup col-10 mx-auto\" >\n          <div className=\"form-group\">\n            <label>Pseudo</label>\n            <input type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Veuillez saisir un pseudo\" value={this.state.name} onChange={this.saveNameHandler} />\n          </div>\n          <div className=\"form-group\">\n            <label>Lobby</label>\n            <input type=\"text\" name=\"number\" className=\"form-control\" placeholder=\"Veuillez saisir le code du Lobby\" value={this.state.number} onChange={this.saveNumberHandler} />\n          </div>\n          <button className=\"btn btn-success btn-block\" onClick={this.joinLobby}>Rejoindre le Lobby</button>\n        </form>\n        <div className=\"bg-secondary mt-3\">\n          <p className='text-left pl-3'>Lobbys disponibles :</p>  \n        </div>\n        <ul className='list-group mt-1'>\n          {this.state.lobbies.map((element) =>  this.lobbyShow(element))}\n        </ul>\n        {this.errorShow(this.state.error)}\n      </div>\n    );\n  }\n\n}\n\nexport default withRouter(JoinLobbyComponent);","import React from 'react';\nimport { configGame } from './config';\nimport './BoardStyle.css';\n//import '../../public/js/map';\nimport data from '../assets/js/map.json';\nimport { Button, Container, Row, Col, Table, ResponsiveEmbed } from 'react-bootstrap';\n\nconst publicVKey = \"BItfWGr9-A8X6Jaoy6AHkRyrs4UPEg1Om2cu8iOeaihiF0zVVNbJsYPOViovgSXYP-5t4hf9n84IJQ7_u1yFZLQ\";\n\n\nexport class TicTacToeBoard extends React.Component {\n\n\n    urlBase64ToUint8Array(base64String) {\n        const padding = '='.repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n            .replace(/\\-/g, '+')\n            .replace(/_/g, '/');\n\n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n\n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    };\n\n    showNotification() {\n        const notif = new Notification(\"Vous pouvez jouer !\", { body: \"C'est à votre tour, vous pouvez jouer votre tour !\", icon: 'img/attack_notification.svg', badge: \"img/logo-fil-rouge.png\" });\n        notif.addEventListener('click', (e) => {\n            window.open('/game', \"_blank\")\n        })\n    }\n\n\n    setWeaponInfo(docu,player) {\n        for (let i = 0; i < player.power; i++) {\n            let img = document.createElement('img');\n            img.classList.add('powerImg')\n            img.src = '/img/power.png';\n            docu.appendChild(img);\n        }\n        if (player.weapon) {\n            let power = player.weapon.power;\n\n            for (let y = 0; y < power; y++) {\n                let img = document.createElement('img');\n                img.classList.add('powerImg')\n                img.src = '/img/power.png';\n                docu.appendChild(img);\n            }\n\n        }\n        return docu;\n    }\n    setArmorInfo(docu,player) {\n        if (player.armor) {\n            let armor = player.armor;\n\n            for (let y = 0; y < armor.armor; y++) {\n                let img = document.createElement('img');\n                img.src = '/img/armor.png';\n                docu.appendChild(img);\n            }\n\n        }\n        return docu;\n    }\n\n    async registration() {\n        if (Notification.permission === \"granted\") {\n            const registration = await navigator.serviceWorker.ready;\n            const subscription = await registration.pushManager.subscribe({\n                userVisibleOnly: true,\n                applicationServerKey: this.urlBase64ToUint8Array(publicVKey),\n            });\n            const nameJoueur = `${this.props.G.nameLobby}_player${this.props.playerID}`;\n\n            const body = {\n                subscription: subscription,\n                name: nameJoueur,\n                matchID:this.props.matchID,\n                credentials:this.props.credentials,\n                playerID:this.props.playerID\n            }\n\n            await fetch('https://server.lamft-dev.tk/subscription', {\n                method: 'POST',\n                body: JSON.stringify(body),\n                headers: {\n                    'content-type': 'application/json',\n                },\n            });\n        }\n    }\n\n    getNotification() {\n        if (('Notification' in window)) {\n            if (Notification.permission !== 'denied' && Notification.permission !== 'granted') {\n                Notification.requestPermission().then(async (permission) => {\n                    this.registration();\n                });\n            }\n            else {\n                this.registration();\n            }\n        }\n        document.getElementById('buttonNotif').style.display = 'none';\n    }\n\n    getRndInteger(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    passTour() {\n        this.props.moves.passTurn();\n    }\n\n    onClick(id) {\n        let cell = this.props.G.cells[id];\n        document.getElementById('error').innerHTML = '';\n        if (cell.type === 'player' && cell.player.etat === 'threatfull') {\n            this.props.moves.attackPlayer(id)\n        }\n        else if (cell.type === 'move') {\n            this.props.moves.moveorAttackPlayer(id);\n        }\n        else if (cell.type === 'object' && cell.object.etat === 'get') {\n            this.props.moves.getObject(id);\n        }\n        else {\n            document.getElementById('error').innerHTML = 'Vous pouvez pas cliquez !'\n        }\n    }\n\n    render() {\n        let winner = '';\n        console.log(this.props.ctx);\n        console.log(this.props.G);\n        console.log(this.props);\n        console.log(this.props.matchData,'this.props.matchData','this.props.matchData');\n        let currentPlayer = this.props.playerID; //Multijoeuur\n        //let currentPlayer = this.props.ctx.currentPlayer; //Multijoeuur\n        if (this.props.ctx.gameover) {\n            console.log('gameover', this.props.ctx.gameover)\n            winner = <div id=\"winner\">Winner: {this.props.ctx.gameover.winner.classCss}</div>\n            if (this.props.ctx.gameover.winner.player !== undefined) {\n                console.log('Winner is => ', this.props.ctx.gameover.winner)\n            }\n        }\n\n\n        let tbody = [];\n        for (let i = 0; i < configGame.width; i++) {\n            let cells = [];\n            for (let j = 0; j < configGame.heigth; j++) {\n                const id = configGame.heigth * i + j;\n\n\n                cells.push(\n                    <td id={id} key={id} onClick={() => this.onClick(id)}>\n                        {this.props.G.cells[id].value/*id*/}\n                        <span id={'span' + id} ></span>\n                    </td>\n                );\n\n                let element = document.getElementById(id.toString());\n\n                if (element != null) {\n\n                    let docSpan = document.getElementById(`span${id.toString()}`);\n                    var cell = this.props.G.cells[id];\n\n                    element.classList.remove(...element.classList)\n                    docSpan.classList.remove(...docSpan.classList);\n                    docSpan.innerHTML = '';\n\n\n                    if (cell.type === 'move') {\n                        element.classList.add('movePossible')\n                    }\n                    else if (cell.type === 'player') {\n\n                        element.classList.add('player', cell.player.classCss)\n                        if (`threatfull` === cell.player.etat) {\n                            element.classList.add('opponent');\n                        }\n                        if (cell.player.life <= 0) {\n                            element.classList.add('dead');\n                        }\n\n                        if (cell.player.classCss === `player${currentPlayer}`) {\n                            document.getElementById('heart').innerHTML = \"\";\n                            document.getElementById('armor').innerHTML = \"\";\n                            for (let i = 0; i < cell.player.life; i++) {\n                                var img = document.createElement('img');\n                                img.src = '/img/heart.gif';\n                                document.getElementById('heart').appendChild(img);\n                            }\n\n                            document.getElementById('dashboard').innerHTML = `<p>Vous avez de puissance ${cell.player.power} et votre capacité de déplacement est ${cell.player.speed}`;\n                            document.getElementById('dashboard_weapon').innerHTML = ``;\n                            document.getElementById('dashboard_armor').innerHTML = ``;\n\n                            let player = cell.player;\n                            let dash_weapon = document.getElementById('dashboard_weapon');\n                            let dashboard_armor = document.getElementById('dashboard_armor');\n                            this.setWeaponInfo(dash_weapon,player);\n                            this.setArmorInfo(dashboard_armor,player);\n\n                            if (Notification.permission === \"granted\") {\n                                //Afficher notification\n                                //this.showNotification()\n                            }\n\n\n                        }\n\n                        console.log(docSpan, `span${id.toString()}`);\n\n                        let p = document.createElement('p');\n                        p.textContent = cell.player.name;\n\n\n                        let divArmor = document.createElement('div');\n                        divArmor.classList.add('armor');\n\n                        let divHeart = document.createElement('div');\n                        divHeart.classList.add('heart');\n\n                        let divPower = document.createElement('div');\n                        divPower.classList.add('power');\n\n                        for (let i = 0; i < cell.player.life; i++) {\n                            let img = document.createElement('img');\n                            img.src = '/img/heart.gif';\n                            divHeart.appendChild(img);\n                        }\n\n                        divArmor = this.setArmorInfo(divArmor,cell.player)\n                        divPower = this.setWeaponInfo(divPower,cell.player);\n\n\n                        docSpan.appendChild(p);\n                        docSpan.appendChild(divArmor);\n                        docSpan.appendChild(divHeart);\n                        docSpan.appendChild(divPower);\n\n                        docSpan.classList.add('popupUser')\n\n                    }\n                    else if (cell.type === 'block') {\n                        element.classList.add('moveImpossible')\n                    }\n                    else if (cell.type === 'object') {\n                        if (cell.object.etat === 'get') {\n                            element.classList.add('items')\n                        }\n                        if (cell.object.image !== '') {\n                            element.classList.add(cell.object.image);\n                        }\n                        \n                        let p = document.createElement('p');\n                        p.textContent = cell.object.name;\n                        docSpan.appendChild(p);\n                        docSpan.classList.add('popupObject')\n\n                    }\n                    else if (cell.type === 'opponent') {\n                        element.classList.add('opponent')\n                    }\n                    element.classList.add('cell', 'cell' + id)\n                }\n\n            }\n            tbody.push(<tr key={i}>{cells}</tr>);\n        }\n        let buttonNotif = '';\n        if (('Notification' in window)) {\n            buttonNotif = <Button id=\"buttonNotif\" variant=\"info\" onClick={() => { this.getNotification() }}><img height=\"20\" src=\"/img/notification.svg\"></img>Cliquez ici, pour accepter les notifications de cette partie</Button>;\n        }\n\n\n\n\n\n\n\n\n        return (\n            <ResponsiveEmbed aspectRatio=\"4by3\">\n                <Container fluid>\n                    <Row>\n                        <Col style={{ width: '100%', height: 'auto' }} className=\"center\">\n                            <Table responsive=\"sm\" className=\"map\" id=\"board\">\n                                <tbody>{tbody}</tbody>\n                            </Table>\n                        </Col>\n                        <Col>\n                            <p id='error'></p>\n                            <div id=\"dashboard\"></div>\n                            <div id=\"dashboard_weapon\"></div>\n                            <div id=\"dashboard_armor\"></div>\n                            <div>\n                                <div id=\"armor\" className=\"armor\"></div>\n                                <div id=\"heart\" className=\"heart\"></div>\n                            </div>\n                            {winner}\n                            {buttonNotif}\n                            <Button id=\"passTour\" variant=\"secondary\" onClick={() => { this.passTour() }}>Cliquez ici, pour passer votre tour !</Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </ResponsiveEmbed>\n        );\n    }\n}\n","import { Client, Lobby } from 'boardgame.io/react'\nimport { TicTacToe } from './Game'\nimport { TicTacToeBoard } from './Board'\nimport { configGame } from './config'\n\n/*const GameFilRouge = () => {\n\n    return <Lobby\n        gameServer={`http://${window.location.hostname}:${configGame.serverPort}`}\n        lobbyServer={`http://${window.location.hostname}:${configGame.serverPort}`}\n        gameComponents={[\n            { game: TicTacToe, board: TicTacToeBoard }\n        ]}\n    />;\n}*/\n\nconst GameFilRouge = Client({\n    game: TicTacToe,\n    board: TicTacToeBoard,\n    numPlayers: 4,\n    debug:false\n})\n\n\nexport default GameFilRouge;","import { Client, Lobby } from 'boardgame.io/react'\nimport { TicTacToe } from './Game'\nimport { TicTacToeBoard } from './Board'\nimport { configGame } from './config'\nimport React, { Component, useState, useEffect } from 'react';\nimport { SocketIO } from 'boardgame.io/multiplayer'\nimport ReactDOM from 'react-dom';\nimport { useLocation, useHistory, useParams } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\n\n\n\nconst Child = () => {\n\n  const [displayGame, setDisplayGame] = useState(false);\n  let interval = null;\n  useEffect(() => {\n\tif (navigator.onLine) {\n\t\tinterval = setInterval(() => {\n\t\t  fetchGame();\n\t\t}, 3000);\n\t}\n  });\n  \n  const params = useParams();\n  const history = useHistory();\n  console.log(params, params, params)\n  const ClientFilRouge = Client({\n\tgame: TicTacToe,\n\tboard: TicTacToeBoard,\n\tmultiplayer: SocketIO({ server: `${configGame.httpORs}://${configGame.urlServer}` }),\n\tdebug: false\n  });\n  const fetchLeave = () => {\n\n\tconst jsonRequest = { playerID: params.playerID, credentials: params.crendentials }\n\tconst requestOptions = {\n\t  method: 'POST',\n\t  headers: { 'Content-Type': 'application/json' },\n\t  body: JSON.stringify(jsonRequest)\n\t};\n\n\tfetch(`${configGame.httpORs}://${configGame.urlServer}/games/Jeu_Fil_Rouge/${params.matchID}/leave`, requestOptions)\n\t  .then(response => response.json())\n\t  .then((data) => {\n\t\t  \n\t\tif (window.indexedDB) {\n\t\t\t\n\t\t\tlet db;\n\t\t\tlet request = indexedDB.open(configGame.dbName);\n\t\t\n\t\t\trequest.onerror = function(event) {\n\t\t\t\tconsole.log(\"error: \", event);\n\t\t\t};\n\t\t\n\t\t\trequest.onsuccess = function(event) {\n\t\t\t\tdb = request.result;\n\t\t\t\t\n\t\t\t\tconst objectStore = db.transaction(\"matches\", \"readwrite\").objectStore(\"matches\");\n\t\t\t\tconst objectStoreRequest = objectStore.delete(`${params.matchID}`);\n\t\t\t\t  \n\t\t\t\tobjectStoreRequest.onsuccess = function(event) {\n\t\t\t\t\tconsole.log(\"Lobby supprimé\")\n\t\t\t\t};\n\t\t\t\t\n\t\t\t}.bind(this);\n\t\t}\n\t\t  \n\t\t  \n\t\thistory.push(`/`);\n\t  });\n  }\n  const ButtonLeave = <Button id=\"passTour\" variant=\"secondary\" onClick={() => { fetchLeave() }}> Quittons cette partie </Button>\n\n  const fetchGame = () => {\n\tfetch(`${configGame.httpORs}://${configGame.urlServer}/games/Jeu_Fil_Rouge/${params.matchID}`)\n\t  .then(response => response.json())\n\t  .then((data) => {\n\t\tconsole.log(data)\n\t\tlet show = true;\n\t\tdata.players.forEach((play) => {\n\t\t  if (play.name === undefined) {\n\t\t\tshow = false;\n\t\t  }\n\t\t});\n\t\tsetDisplayGame(show)\n\t  });\n  }\n\n  const showGame = () => {\n\treturn (\n\t  <div>\n\t\t<ClientFilRouge matchID={params.matchID} playerID={params.playerID.toString()} credentials={params.crendentials} />\n\t\t{ButtonLeave}\n\t  </div>\n\t)\n  }\n  const showLobby = () => {\n\treturn (\n\t  <div>\n\t\tPas encore assez de joueur\n\t\t{ ButtonLeave}\n\t  </div>\n\t)\n  }\n  /*const ClientFilRouge = Client({\n\t\tgame: TicTacToe,\n\tboard: TicTacToeBoard,\n\tdebug: false\n  });*/\n\n  if (navigator.onLine) {\n\t\tif (displayGame) {\n\t\t  clearInterval(interval);\n\t\t  return showGame();\n\t\t} else {\n\t\t  fetchGame();\n\t\t  return showLobby();\n\t\t}\n  }\n  else {\n\t  return (\n\t\t  <p> Pas de connection, impossible de jouer en ligne ! </p>\n\t  )\n  }\n}\nexport default Child;","import { Lobby } from 'boardgame.io/react'\nimport { TicTacToe } from './Game'\nimport { TicTacToeBoard } from './Board'\nimport { configGame } from './config'\n\nconst Multiplayer = () => {\n\n    return <Lobby\n        gameServer={`${configGame.httpORs}://${configGame.urlServer}`}\n        lobbyServer={`${configGame.httpORs}://${configGame.urlServer}`}\n        gameComponents={[\n            { game: TicTacToe, board: TicTacToeBoard }\n        ]}\n    />;\n}\n\n\nexport default Multiplayer;","import React from \"react\";\nimport Home from \"./vues/Home\";\nimport NewLobbyComponent from './vues/NewLobbyComponent';\nimport JoinLobbyComponent from './vues/JoinLobbyComponent';\nimport GameFilRouge from './game/index'\nimport ClientFilRouge from './game/client'\nimport Multiplayer from './game/multiplayer'\nimport { \n  Nav,\n  Navbar,\n  Container\n} from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nexport default function App() {\n  \n  return (\n    <Router >\n      <Menu />\n      <div className='container'>\n        <Switch>\n          <Route path=\"/create-lobby\">\n            <NewLobbyComponent />\n          </Route>\n          <Route path=\"/join-lobby\">\n            <JoinLobbyComponent />\n          </Route>\n          <Route path=\"/client/:matchID/:crendentials/:playerID\">\n            <ClientFilRouge />\n          </Route>\n          <Route path=\"/game\">\n            <GameFilRouge />\n          </Route>\n          <Route path=\"/multiplayer\">\n            <Multiplayer />\n          </Route>\n          <Route path=\"/\" component={Home}>\n          </Route>\n        </Switch>\n      </div>\n\n    </Router>\n  );\n}\nfunction Menu() {\n  return (\n      <Navbar className=\"bg-light container-fluid\" expand=\"lg\">\n        <Navbar.Brand href=\"/\">Fil Rouge</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/create-lobby\">Créer un Lobby</Nav.Link>\n            <Nav.Link href=\"/join-lobby\">Rejoindre un Lobby</Nav.Link>\n            <Nav.Link href=\"/game\">Le Jeu</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      console.log('swUrl',swUrl)\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  console.log('dddd')\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        console.log(response.status )\n        console.log(contentType != null  )\n        console.log(contentType.indexOf('javascript') === -1 )\n        console.log('sss');\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        console.log('aaaaa');\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}