[{"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/reportWebVitals.js":"1","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/App.js":"2","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/index.js":"3","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Board.js":"4","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/index.js":"5","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Game.js":"6"},{"size":362,"mtime":1608201359376,"results":"7","hashOfConfig":"8"},{"size":2222,"mtime":1608295225012,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1608201359376,"results":"10","hashOfConfig":"8"},{"size":1991,"mtime":1610118904587,"results":"11","hashOfConfig":"8"},{"size":635,"mtime":1610120079877,"results":"12","hashOfConfig":"13"},{"size":4306,"mtime":1610120474501,"results":"14","hashOfConfig":"13"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ueaqdz",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"h828jz",{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/reportWebVitals.js",[],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/App.js",[],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/index.js",[],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Board.js",["28","29"],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/index.js",["30","31"],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Game.js",["32","33","34","35","36","37"],"import { INVALID_MOVE, TurnOrder } from \"boardgame.io/core\";\nimport { configGame } from \"./index\"\nimport {TicTacToeBoard} from \"./Board\"\n\nconst PlayersPositions = [];\n\nconst cellVide = {\n    'typeCell' : 'vide',\n    'value' : ''\n} \nconst cellBlock = {\n    'typeCell' : 'impossible',\n    'value' : ''\n} \n\nfunction IsVictory(cells) {\n    const positions = [\n        [0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6],\n        [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]\n    ];\n    const isRowComplete = row => {\n        const symbols = row.map(i => cells[i]);\n        return symbols.every(i =>\n            (i !== null) &&\n            (i === symbols[0])\n        );\n    }\n\n    return positions.map(isRowComplete).some(i => i === true)\n}\n\nfunction isDraw(cells) {\n    return cells.filter(c => c === null).length === 0;\n}\n\nfunction getRndInteger() {\n    let max = configGame.width * configGame.heigth\n    return Math.floor(Math.random() * (max - 0 )) + 0;\n}\n\nfunction getMovePossible(currentPosition) {\n    let tabMoveCell = [];\n    let tailleGrid = configGame.width;\n\n    if (currentPosition-tailleGrid >= 0) {\n        tabMoveCell.push(currentPosition-tailleGrid)\n    }\n    if (currentPosition+tailleGrid < configGame.maxCases) {\n        tabMoveCell.push(currentPosition+tailleGrid)\n    }\n    if (currentPosition%tailleGrid != tailleGrid-1 ) {\n        tabMoveCell.push(currentPosition+1)\n    }\n    if (currentPosition%tailleGrid != 0 ) {\n        tabMoveCell.push(currentPosition-1)\n    }\n    return tabMoveCell;\n}\n\nexport const TicTacToe = {\n    setup: (ctx, setupData) => {\n\n        let G = { cells: Array(configGame.maxCases).fill(null) }\n        console.log(\"ctx\", ctx);\n        console.log(\"setupData\", setupData);\n\n        ctx.playOrder.forEach(player => {\n            let siPositionIncorrect = true;\n            while (siPositionIncorrect) {\n\n                let playerDefaultPosition = getRndInteger();\n\n                if (!PlayersPositions.includes(playerDefaultPosition)) {\n\n                    siPositionIncorrect = false;\n                    \n                    G.cells[playerDefaultPosition] = player; \n                    PlayersPositions[player] = playerDefaultPosition\n                }\n            }\n        });\n        return G;\n    },\n    turn: {\n        moveLimit: 1,\n        order:TurnOrder.DEFAULT,\n        onBegin: (G, ctx) => {\n\n            let playerPosition = PlayersPositions[ctx.currentPlayer]\n\n            let tabMoveCell = getMovePossible(playerPosition);\n            tabMoveCell.forEach((movecell) => {\n                if (G.cells[movecell] == null && G.cells[movecell] !== undefined) {\n                    G.cells[movecell] = 'M';\n                }\n            });\n\n\n        },\n        onEnd: (G,ctx) => {\n            G.cells = G.cells.map(cell => { if (cell == 'M') {return null} else {return cell}})\n        }\n    },\n    moves: {\n        clickCell: (G, ctx, id) => {\n            console.log(id, G.cells[id]);\n\n            if (G.cells[id] !== 'M') {\n                return INVALID_MOVE\n            }\n            else if (G.cells[id] !== null && G.cells[id] !== 'M') {\n                console.log('d')\n                return INVALID_MOVE\n            } //TODO: Simplification ? mais ca fonctionne\n\n            for (let i = 0; i<G.cells.length;i++) {\n                if (G.cells[i] === ctx.currentPlayer) {\n                    G.cells[i] = null\n                }\n            }\n            \n            G.cells[id] = ctx.currentPlayer;\n            PlayersPositions[ctx.currentPlayer] = id;\n\n            //TODO : On pourra faire des appels aux API.\n        }\n    },\n    endIf: (G, ctx) => {\n        if (IsVictory(G.cells)) {\n            return { winner: ctx.currentPlayer };\n        }\n        if (isDraw(G.cells)) {\n            return { draw: true };\n        }\n    },\n    ai: {\n        enumerate: (G, ctx) => {\n            let moves = [];\n            for (let i = 0; i < configGame.maxCases; i++) {\n                if (G.cells[i] === null) {\n                    moves.push({ move: 'clickCell', args: [i] });\n                }\n            }\n            return moves;\n        },\n    },\n}\n\n\n/* \n\n{\n    'typeCell' = 'move',\n    'value' = '';\n}\n\n{\n    'typeCell' = 'vide',\n    'value' = '';\n}\n\n{\n    'typeCell' = 'player',\n    'value' = '';\n}\n\n{\n    'typeCell' = 'item',\n    'value' = '';\n}\n\n\n\n*/",{"ruleId":"38","severity":1,"message":"39","line":7,"column":5,"nodeType":"40","messageId":"41","endLine":7,"endColumn":14},{"ruleId":"42","severity":1,"message":"43","line":48,"column":48,"nodeType":"44","messageId":"45","endLine":48,"endColumn":50},{"ruleId":"38","severity":1,"message":"46","line":1,"column":18,"nodeType":"40","messageId":"41","endLine":1,"endColumn":23},{"ruleId":"38","severity":1,"message":"47","line":9,"column":7,"nodeType":"40","messageId":"41","endLine":9,"endColumn":12},{"ruleId":"38","severity":1,"message":"48","line":3,"column":9,"nodeType":"40","messageId":"41","endLine":3,"endColumn":23},{"ruleId":"38","severity":1,"message":"49","line":7,"column":7,"nodeType":"40","messageId":"41","endLine":7,"endColumn":15},{"ruleId":"38","severity":1,"message":"50","line":11,"column":7,"nodeType":"40","messageId":"41","endLine":11,"endColumn":16},{"ruleId":"42","severity":1,"message":"51","line":51,"column":36,"nodeType":"44","messageId":"45","endLine":51,"endColumn":38},{"ruleId":"42","severity":1,"message":"51","line":54,"column":36,"nodeType":"44","messageId":"45","endLine":54,"endColumn":38},{"ruleId":"42","severity":1,"message":"43","line":101,"column":54,"nodeType":"44","messageId":"45","endLine":101,"endColumn":56},"no-unused-vars","'firstTurn' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Lobby' is defined but never used.","'state' is assigned a value but never used.","'TicTacToeBoard' is defined but never used.","'cellVide' is assigned a value but never used.","'cellBlock' is assigned a value but never used.","Expected '!==' and instead saw '!='."]