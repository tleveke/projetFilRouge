[{"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/reportWebVitals.js":"1","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/App.js":"2","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/index.js":"3","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Board.js":"4","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/index.js":"5","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Game.js":"6"},{"size":362,"mtime":1608201359376,"results":"7","hashOfConfig":"8"},{"size":2222,"mtime":1608295225012,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1608201359376,"results":"10","hashOfConfig":"8"},{"size":1612,"mtime":1610024907864,"results":"11","hashOfConfig":"8"},{"size":633,"mtime":1610107548834,"results":"12","hashOfConfig":"8"},{"size":2508,"mtime":1610107565759,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ueaqdz",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/reportWebVitals.js",[],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/App.js",[],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/index.js",[],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Board.js",["27"],"import React from 'react';\nimport { configGame } from '.';\n\nlet firstTurn = true;\n\nexport class TicTacToeBoard extends React.Component {\n    getRndInteger(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    onClick(id) {\n        this.props.moves.clickCell(id);\n    }\n\n    render() {\n\n        let winner = '';\n        if (this.props.ctx.gameover) {\n            winner =\n                this.props.ctx.gameover.winner !== undefined ? (\n                    <div id=\"winner\">Winner: {this.props.ctx.gameover.winner}</div>\n                ) : (\n                        <div id=\"winner\">Draw!</div>\n                    );\n        }\n\n        const cellStyle = {\n            border: '1px solid #555',\n            width: '10px',\n            height: '10px',\n            lineHeight: '10px',\n            textAlign: 'center',\n        };\n\n        let tbody = [];\n        for (let i = 0; i < configGame.width; i++) {\n            let cells = [];\n            for (let j = 0; j < configGame.heigth; j++) {\n                const id = configGame.heigth * i + j;\n                cells.push(\n                    <td style={cellStyle} className={\"cell\"+id} key={id} onClick={() => this.onClick(id)}>\n                        {this.props.G.cells[id]/*id*/}\n                    </td>\n                );\n            }\n            tbody.push(<tr key={i}>{cells}</tr>);\n        }\n\n        \n\n        \n\n\n\n\n        return (\n            <div>\n                <table id=\"board\">\n                    <tbody>{tbody}</tbody>\n                </table>\n                {winner}\n            </div>\n        );\n    }\n}","/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/index.js",["28","29"],"/Users/tomleveque/ynov/webmobile/filrouge_projet/src/game/Game.js",["30"],{"ruleId":"31","severity":1,"message":"32","line":4,"column":5,"nodeType":"33","messageId":"34","endLine":4,"endColumn":14},{"ruleId":"31","severity":1,"message":"35","line":1,"column":18,"nodeType":"33","messageId":"34","endLine":1,"endColumn":23},{"ruleId":"31","severity":1,"message":"36","line":9,"column":7,"nodeType":"33","messageId":"34","endLine":9,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":66,"column":32,"nodeType":"39","messageId":"40","endLine":66,"endColumn":34},"no-unused-vars","'firstTurn' is assigned a value but never used.","Identifier","unusedVar","'Lobby' is defined but never used.","'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]